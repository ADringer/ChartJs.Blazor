@page "/doughnutChartExample"
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.DoughnutChart
@using ChartJs.Blazor.ChartJS.Common.Properties

<h1>Doughnut Chart</h1>

<ChartJsDoughnutChart @ref="doughnutChartJs" Config="@config" Width="600" Height="300" />

@code {
    private DoughnutChartConfig config;
    private ChartJsDoughnutChart doughnutChartJs;

    protected override void OnInit()
    {
        config = new DoughnutChartConfig
        {
            CanvasId = "myFirstDoughnutChart",
            Options = new DoughnutChartOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new PieDoughnutAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var doughnutSet = new DoughnutChartDataset();

        doughnutSet.BackgroundColor.AddRange(new List<string> { "#ff6384", "#55ee84", "#4463ff", "#efefef" });
        doughnutSet.BorderWidth.Add(0);
        doughnutSet.HoverBackgroundColor.AddRange(new List<string> { "#f06384" });
        doughnutSet.HoverBorderColor.AddRange(new List<string> { "#f06384" });
        doughnutSet.HoverBorderWidth.Add(1);
        doughnutSet.BorderColor.AddRange(new List<string> { "#ffffff", "#ffffff", "#ffffff", "#ffffff" });

        doughnutSet.Data.AddRange(new List<double> { 4, 5, 6, 7 });
        config.Data.Datasets.Add(doughnutSet);
    }
}}
