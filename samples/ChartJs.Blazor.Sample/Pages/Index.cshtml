@page "/"
@using ChartJs.Blazor.ChartJS
@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJsBarChart = ChartJs.Blazor.Components.ChartJsBarChart

<div class="container">
    <h2>Chart JS charts using Blazor</h2>
    <div class="row">
        <button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
    </div>
    <ChartJsBarChart ref="barChart"
                     Config="@barChartConfig"
                     Width="600"
                     Height="300"/>
</div>

@functions {

    public ChartJsBarChart barChart { get; set; }
    public BarChartConfig barChartConfig { get; set; }

    protected override void OnInit()
    {
        barChartConfig = barChartConfig ?? new BarChartConfig()
        {
            CanvasId = "myBarChartCanvas",
            Options = new BarChartOptions()
            {
                Text = "Sample chart from Blazor",
                Display = true,
                Responsive = false
            },
            Data = new BarChartData
            {
                Labels = new List<string> {"Red", "Blue", "Yellow", "Green", "Purple", "Orange"},
                Datasets = new List<BarChartDataset>
                {
                    new BarChartDataset
                    {
                        Label = "# of Votes from blazor",
                        BackgroundColor = "#cc65fe",
                        BorderColor = "#cc65fe",
                        Data = new List<dynamic> {19, 12, 5, 3, 3, 2}
                    },
                    new BarChartDataset
                    {
                        Label = "# of Likes from blazor",
                        BackgroundColor = "#36a2eb",
                        BorderColor = "#36a2eb",
                        Data = new List<dynamic> {30, 10, 15, 13, 13, 12}
                    }
                }
            }
        };
    }

    protected override void OnAfterRender()
    {
        Console.WriteLine("OnAfterRender - bar");
    //barChartJs.UpdateChart(barChartDat, barChartoptionsa);
        barChart.Update();
    }

    public void UpdateChart()
    {
    //Update existing dataset
    //barChartData.Labels.Add($"New{DateTime.Now.Second}");
    //barChartData.Datasets.First().Data.Add(DateTime.Now.Second);

    //barChartJs.UpdateChart(barChartData);
    }

}