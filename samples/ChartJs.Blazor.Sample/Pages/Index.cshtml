@page "/"
@using ChartJs.Blazor.ChartJS.BarChart.Dataset
@using ChartJs.Blazor.Util.Color


<h2>Simple Bar Chart</h2>
<div class="row">
    <button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
</div>
<ChartJsBarChart ref="barChart"
                 Config="@barChartConfig"
                 Width="600"
                 Height="300"/>

@functions {

    private ChartJsBarChart barChart { get; set; }
    private BarChartConfig barChartConfig { get; set; }

    protected override void OnInit()
    {
        barChartConfig = barChartConfig ?? new BarChartConfig
        {
            CanvasId = "myBarChartCanvas",
            Options = new BarChartOptions
            {
                Text = "Sample chart from Blazor",
                Display = true,
                Responsive = true
            },
            Data = new BarChartData
            {
                Labels = new List<string> {"Red", "Blue", "Yellow", "Green", "Purple", "Orange"},
                Datasets = new List<BaseBarChartDataset>
                {
                    new BarChartDataset
                    {
                        Label = "# of Votes from blazor",
                        BackgroundColor = ColorUtil.RandomColorString(),
                        BorderColor = ColorUtil.RandomColorString(),
                        Data = new List<dynamic> {19, 12, 5, 3, 3, 2}
                    },
                    new BarChartDataset
                    {
                        Label = "# of Likes from blazor",
                        BackgroundColor = ColorUtil.RandomColorString(),
                        BorderColor = ColorUtil.RandomColorString(),
                        Data = new List<dynamic> {30, 10, 15, 13, 13, 12}
                    }
                }
            }
        };
    }

    protected override void OnAfterRender()
    {
        Console.WriteLine("OnAfterRender - bar");
        //barChartJs.UpdateChart(barChartDat, barChartoptionsa);
        barChart.Reload();
    }

    private void UpdateChart()
    {
        //Update existing dataset
        barChartConfig.Data.Labels.Add($"{DateTime.Now.Second}");
        barChartConfig.Data.Datasets.ForEach(dataset => { dataset.Data.Add(DateTime.Now.Second); });

        barChart.Reload();
    }

}