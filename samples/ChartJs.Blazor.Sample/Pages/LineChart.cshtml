@page "/LineChart"
@using ChartJs.Blazor.ChartJS
@using ChartJs.Blazor.Components


<h2>Chart JS charts using Blazor</h2>
<div class="row">
    <button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
</div>
<ChartJsLineChart ref="lineChartJs" Chart="@blazorLineChartJS" Width="600" Height="300"/>

@functions{

    public ChartJSChart blazorLineChartJS { get; set; }
    ChartJsLineChart lineChartJs;

    protected override void OnInit()
    {
        blazorLineChartJS = blazorLineChartJS ?? new ChartJSChart()
        {
            ChartType = ChartTypes.LINE.ToString(),
            CanvasId = "myFirstLineChart",
            Options = new ChartJsOptions()
            {
                Text = "Sample chart from Blazor",
                Display = true,
                Responsive = false
            },
            Data = new ChartJsData()
            {
                Labels = new List<string>() {"Red", "Blue", "Yellow", "Green", "Purple", "Orange"},
                Datasets = new List<ChartJsDataset>()
                {
                    new ChartJsLineDataset()
                    {
                        BackgroundColor = "#ff6384",
                        BorderColor = "#ff6384",
                        Label = "# of Votes from blazor",
                        Data = new List<dynamic> {19, 12, 5, 3, 3, 2},
                        Fill = false,
                        BorderWidth = 2,
                        PointRadius = 3,
                        PointBorderWidth = 1
                    }
                }
            }
        };
    }

    protected override void OnAfterRender()
    {
        Console.WriteLine("OnAfterRender");
        lineChartJs.UpdateChart(blazorLineChartJS);
    }

    public void UpdateChart()
    {
        //Update existing dataset
        blazorLineChartJS.Data.Labels.Add($"New{DateTime.Now.Second}");
        var firstDataSet = blazorLineChartJS.Data.Datasets[0];

        //firstDataSet.Data.Add(DateTime.Now.Second);

        //Add new dataset
        //blazorLineChartJS.Data.Datasets.Add(new ChartJsLineDataset()
        //{
        //    BackgroundColor = "#cc65fe",
        //    BorderColor = "#cc65fe",
        //    Label = "# of Votes from blazor 1",
        //    Data = new List<int> {20,21,12,3,4,4},
        //    Fill = true,
        //    BorderWidth = 2,
        //    PointRadius = 3,
        //    PointBorderWidth = 1
        //});

        lineChartJs.UpdateChart(blazorLineChartJS);
    }


    protected override Task OnInitAsync()
    {
        Console.WriteLine("OnInitAsync");
        return Task.CompletedTask;
    }


    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParameterSet");
    }

    protected override Task OnParametersSetAsync()
    {
        Console.WriteLine("OnParameterSetAsync");
        return Task.CompletedTask;
    }


    protected override bool ShouldRender()
    {
        Console.WriteLine("ShouldRender");
        return true;
    }


    protected override Task OnAfterRenderAsync()
    {
        Console.WriteLine("OnAfterRenderAsync");
        return Task.CompletedTask;
    }

}