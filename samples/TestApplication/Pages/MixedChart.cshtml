@page "/MixedChart"
@using BlazorComponents.Shared

<h2>Chart JS charts using Blazor</h2>
<div class="row">
    <button class="btn btn-primary" onclick="@UpdateChart">Update Chart </button>
</div>
<ChartJsMixedChart ref="mixedChartJs" Chart="@blazorMixedChartJS" Width="600" Height="300"/>

@functions {

    public ChartJSChart blazorMixedChartJS { get; set; }
    ChartJsMixedChart mixedChartJs;

    protected override void OnInit()
    {
        blazorMixedChartJS = blazorMixedChartJS ?? new ChartJSChart()
        {
            ChartType = ChartTypes.BAR.ToString(), // this is not a mistake, the type needs to be bar
            CanvasId = "myFirstMixedChart",
            Options = new ChartJsOptions()
            {
                Text = "Sample chart from Blazor",
                BorderWidth = 1,
                Display = true,
                Responsive = true
            },
            Data = new ChartJsData()
            {
                Labels = new List<string>() {"Red", "Blue", "Yellow", "Green", "Purple", "Orange"},
                Datasets = new List<ChartJsDataset>()
                {
                    new ChartJsBarDataset()
                    {
                        Label = "# of Votes from blazor",
                        BackgroundColor = "#4465fe",
                        BorderColor = "#4465fe",
                        Data = new List<dynamic>() {19, 12, 5, 3, 3, 2}
                    },
                    new ChartJsLineDataset()
                    {
                        BackgroundColor = "#ff6384",
                        BorderColor = "#ff6384",
                        Label = "# of Votes from blazor",
                        Data = new List<dynamic> {19, 12, 5, 3, 3, 2},
                        Fill = false,
                        BorderWidth = 2,
                        PointRadius = 3,
                        PointBorderWidth = 1
                    }
                    ,
                    new ChartJsBarDataset()
                    {
                        Label = "# of Votes from blazor",
                        BackgroundColor = "#cc65fe",
                        BorderColor = "#cc65fe",
                        Data = new List<dynamic>() {19, 12, 5, 3, 3, 2}
                    }
                }
            }
        };
    }

    protected override void OnAfterRender()
    {
        Console.WriteLine("OnAfterRender");
        mixedChartJs.UpdateChart(blazorMixedChartJS);
    }

    public void UpdateChart()
    {
    //Update existing dataset
        blazorMixedChartJS.Data.Labels.Add($"New{DateTime.Now.Second}");
        var firstDataSet = blazorMixedChartJS.Data.Datasets[0];
        (firstDataSet as ChartJsDataset).Data.Add(DateTime.Now.Second);

    //Add new dataset
    //blazorLineChartJS.Data.Datasets.Add(new ChartJsLineDataset()
    //{
    //    BackgroundColor = "#cc65fe",
    //    BorderColor = "#cc65fe",
    //    Label = "# of Votes from blazor 1",
    //    Data = new List<int> {20,21,12,3,4,4},
    //    Fill = true,
    //    BorderWidth = 2,
    //    PointRadius = 3,
    //    PointBorderWidth = 1
    //});

        mixedChartJs.UpdateChart(blazorMixedChartJS);
    }

}