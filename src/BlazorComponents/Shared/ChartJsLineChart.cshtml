@using BlazorComponents.ChartJS

<div class="row">
    Display button is currently necessary, while blazor <a href="https://github.com/aspnet/Blazor/issues/495">#495</a> gives us a way to initialize at RenderComplete.<br /><br />
</div>
<div class="row">
    <div class="col-lg-3">
        <button class="btn btn-large btn-success" onclick="@DisplayChart">Display Chart</button><br />
    </div>
    <div class="col-lg-3">
        <button class="btn btn-large btn-success" onclick="@UpdateChartJS">Update Chart</button>
    </div>
</div>
<div class="row">
    <div class="container">
        <canvas id="@Chart.CanvasId" width="@Width" height="@Height"></canvas>
    </div>
</div>

@functions {

    public ChartJSChart<ChartJsLineDataset> Chart { get; set; }
    public Action<ChartJSChart<ChartJsLineDataset>> UpdateChart { get; set; }
    public int Width { get; set; } = 200;
    public int Height { get; set; } = 200;
    private string ChartjsChart { get; set; } = "";

    void DisplayChart()
    {
        ChartJSInterop.InitializeLineChart(Chart);
    }

    void UpdateChartJS()
    {
        UpdateChart(Chart);
        ChartJSInterop.UpdateLineChart(Chart);
    }
}
